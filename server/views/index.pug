html
  head
    meta(charset='utf-8')
    title Adventure Corp
    meta(name='description', content='Adventure Corp')
    link(href='/css/style.css', rel='stylesheet', type='text/css', media='screen')
    link(href='https://fonts.googleapis.com/css?family=Roboto', rel='stylesheet')
    script(src='/js/lib/jquery-3.2.1.min.js')
    script(src='/js/lib/aframe-0.6.1.min.js')
    script(src='/js/lib/socket.io-1.4.5.min.js')
    script(src='/js/lib/aframe-gif-shader.min.js')
    script(src='/js/lib/aframe-gif-component.min.js')
    //script(src='/js/lib/aframe-environment-component.min.js')
    script(src='/easyrtc/easyrtc.js')
    script(src='/js/lib/networked-aframe-0.2.1.min.js')
    script(src='/js/lib/aframe-randomizer-components-3.0.2.min.js')
    script(src='/js/lib/aframe-particle-system-component-1.0.5.min.js')
    script(src='/js/scraped-site-content.js')
    script(src='/js/loadSceneContent.js')
    script(src='/js/spawn-in-circle.component.js')
    script(src='/js/link-component.js')
    script(src='/js/savePosition.js')
    script(src='/js/addRoom.js')
    script(src='/js/menu-ui.js')
    script(src='/js/uploadAvatar.js')
    script(src='/js/uploadMedia.js')
    script(src='/js/aframe-extras.min.js')
    script(src='/js/slackNotify.js')
    script(src='/js/close-windows.js')
    if specLocX
      script.
        specLocX = #{specLocX};
        specLocY = #{specLocY};
        specLocZ = #{specLocZ};
        specRotX = #{specRotX};
        specRotY = #{specRotY};
        specRotZ = #{specRotZ};
    script.
      console.log("pug template, room is #{roomToJoin}");
      // Define custom schema for syncing avatar color, set by random-color
      var avatarSchema = {
      template: '#avatar-template',
      components: [
      'position',
      'rotation',
      {
      selector: '.head',
      component: 'material'
      },
      {
      selector: '.avatar-image-class',
      component: 'material'
      }
      ]
      };
      NAF.schemas.add(avatarSchema);
  body
    img#avatar-hud(src='/images/gradient.png')
    #link_input_div
      p#media_input_p.p_input
      input#appendedLink.link_btns(type='text', placeholder='Enter URL Here', name='Link', required='')
      button.link_btns(onclick='checkLink(mediaLoader)') Submit
      button.link_btns(onclick='mediaLoader("")') No Thanks
    #add_room_div
      input#enterRoomName.link_btns(type='text', placeholder='Room to Add', name='roomToAdd', required='')
      button.link_btns(onclick='addRoom()') Add Room
    div.searchform.group
      input#search-box(type='search', placeholder='Paste a URL here')
      button#goButton(name='Go', onclick='checkLink(useSiteContent)') Go
    #menu_div
      button#add_room_button.menu_btn.exp(name='Add Room', onclick='addRoomButton()')
        img.menu_icon(src='/ui/icons/roooms.png')
      button#savelocationbutton.menu_btn.exp(name='Save Location', onclick='savePosition()')
        img.menu_icon(src='/ui/icons/location.png', style='filter: invert(100%);')
      input#media_input.upload(type='file', style='display:none', single='')
      button#addmedia_btn.menu_btn.exp(name='Add Media', onclick='uploadMedia()')
        img.menu_icon(src='/ui/icons/addmedia.png')
      input#avatar_input.upload(type='file', style='display:none', single='')
      button#avatar_menu_btn.menu_btn.exp(name='Upload Avatar', onclick='uploadAvatar()')
        img.menu_icon(src='/ui/icons/addavatar.png')
      button#enter_vr.menu_btn(name='VR Mode')
        img.menu_icon(src='/ui/icons/cardboard.png')
    a-scene(networked-scene="room: "+roomToJoin+";debug: true;", vr-mode-ui='enabled: false')
      //a-entity(environment='preset: tron; skyColor: #081d43; fog: 0; gridColor: #026800; groundColor: #655853; groundColor2: #694f45; grid: 1x1; dressingAmount: 30; dressingVariance: 10 10 10; dressingScale: 0; dressingColor: #008000; dressing: trees; lights: none; horizonColor: #0079be; groundYScale: 4.54; seed: 14; ground: spikes')
      //a-entity(environment='preset: tron; dressing: trees; dressingColor: #008000; dressingAmount: 30; dressingVariance: 10 10 10; dressingScale: 5')
      a-assets
        //load of all the images from the database as assets
        for image,index in imagesToLoad
          img(id="image"+index, src=image.src, crossorigin='anonymous')
        img#grid(src='/images/grid.png', crossorigin='anonymous')
        img#sky(src='/images/underwater.jpg', crossorigin='anonymous')
        //a-asset-item#rocketship-obj(src='/models/rocketship/model.obj')
        //a-asset-item#rocketship-mtl(src='/models/rocketship/materials.mtl')
        //a-asset-item#aclogo-obj(src='/models/adventurecorp/aclogo_illustrator.obj')
        //a-asset-item#aclogo-mtl(src='/models/adventurecorp/aclogo_illustrator.mtl')
        // Avatar
        script#avatar-template(type='text/html').
          <a-entity class="avatar">
          <a-image class="avatar-image-class" material="src: url(/images/gradient.png)" scale="5 5 5" position="2 2 2">
          </a-image>
          <!--<a-entity obj-model="obj: #spongebob-obj; mtl: #spongebob-mtl"></a-entity>-->
          <a-sphere class="head"
          color="#5985ff"
          scale="0.45 0.5 0.4"
          random-color
          ></a-sphere>
          <a-entity class="face"
          position="0 0.05 0"
          >
          <a-sphere class="eye"
          color="#efefef"
          position="0.16 0.1 -0.35"
          scale="0.12 0.12 0.12"
          >
          <a-sphere class="pupil"
          color="#000"
          position="0 0 -1"
          scale="0.2 0.2 0.2"
          ></a-sphere>
          </a-sphere>
          <a-sphere class="eye"
          color="#efefef"
          position="-0.16 0.1 -0.35"
          scale="0.12 0.12 0.12"
          >
          <a-sphere class="pupil"
          color="#000"
          position="0 0 -1"
          scale="0.2 0.2 0.2"
          ></a-sphere>
          </a-sphere>
          </a-entity>
          </a-entity>
        // /Templates
      a-entity#player(networked='template:#avatar-template;showLocalTemplate:false;', camera='', spawn-in-circle='radius:3;', position='0 1.3 0', wasd-controls='')
      script.
        if (AFRAME.utils.device.isMobile ()) {
        document.querySelectorAll('#player')[0].setAttribute('universal-controls','');
        }
        else {
        document.querySelectorAll('#player')[0].setAttribute('look-controls','');
        }
      a-entity(position='0 0 0', geometry='primitive: plane; width: 10000; height: 10000;', rotation='-90 0 0', material='src: #grid; repeat: 10000 10000; transparent: true; metalness:0.6; roughness: 0.4; sphericalEnvMap: #sky;')
      a-entity(light='color: #ccccff; intensity: 1; type: ambient;', visible='')
      a-entity(light='color: #ffaaff; intensity: 1.5', position='5 5 5')
      a-sky(src='#sky', rotation='0 -90 0')
      a-entity#particles(particle-system='preset: snow')
      //a-entity(obj-model='obj: #rocketship-obj; mtl: #rocketship-mtl', scale ='10 10 10', rotation= '0 180 0', position = '0 5 10')
      //a-entity(obj-model='obj: #aclogo-obj; mtl: #aclogo-mtl', scale ='1 1 1', rotation= '-90 180 0', position = '0 9 10')
      a-image#adventurecorp(material='src: url(/images/Adventure_Corporation.png); alphaTest: .001, transparent: true', scale='20 20 20', position='0 7 10', rotation='0 180 0')
      a-image#welcome(material='src: url(/images/welcome0-02.jpg)', scale='15 15 15', position='0 7 -15', rotation='0 0 0')
      for image,index in imagesToLoad
        a-image(src='#image'+index,
          position=image.position.x + " " + image.position.y + " " + image.position.z,
          rotation=image.rotation.x + " " + image.rotation.y + " " + image.rotation.z,
          mylink='link: '+image.link,
          material = image.gif ? 'alphaTest: .001; transparent: true; shader:gif' : 'alphaTest: .001; transparent: true'
          )
    script.
      // On mobile remove elements that are resource heavy
      var isMobile = AFRAME.utils.device.isMobile();
      if (isMobile) {
      var particles = document.getElementById('particles');
      particles.parentNode.removeChild(particles);
      }
      NAF.connection.subscribeToDataChannel('imagePlaced', avatarCallback);
      function avatarCallback(senderRtcId, dataType, data) {
      console.log("DATA RECEIVED", senderRtcId, dataType, data);
      var image = JSON.parse(data);
      addImageToScene(image.src, image.position, image.rotation, image.link, image.gif);
      };
      NAF.connection.subscribeToDataChannel('mediaCardPlaced', mediaCardCallback);
      function mediaCardCallback(senderRtcId, dataType, data) {
      console.log("DATA RECEIVED", senderRtcId, dataType, data);
      var mediaCard = JSON.parse(data);
      addScrapedContent(mediaCard.title, mediaCard.description, mediaCard.image, mediaCard.link, mediaCard.imgPosition, mediaCard.titlePosition, mediaCard.descriptionPosition, mediaCard.rotation)
      };
